#
#   This is the core configuration for service.  There are two examples here:
#
#       -  A configuration service which completely loads the configuration for the services
#          from the local file server of the config service. This should only be used for
#          demonstration purposes or for a small application with a limited number of services.
#
#       -  A configuration service that uses a git-based repository to read the files from.
#

####
# Classpath and file-based solution
####

spring:
  cloud:
    config:
      server:
        encrypt:
          enabled: false
        native:
          searchLocations:
            classpath:config/licensing-service,
            classpath:config/organization-service,
            classpath:config/zuul-service,
            classpath:config/authentication-service

####
# Git-based solution
####

#spring:
#  cloud:
#    config:
#      server:
#        encrypt:
#          enabled: false
#        git:
#          uri: https://github.com/xxxx/config-repo/
#          searchPaths: licensing-service,organization-service,zuul-service,authentication-service
#          username: username
#          password: password

# 为数据库密码配置加密密钥
#
# 注意：在使用时需要在加密串前添加 "{cipher}" 前缀：
#  spring:
#    datasource:
#      password: "{cipher}1a6d087099a484013f94121ba60d15688a2307dcbff5769ee7e6ec33eae74393"
#
# 在启动 Spring Cloud Config 实例时，Spring Cloud Config 将检测到 encrypt 属性已配置（如这里的配置或通过环境变量传递）,
# 将自动添加两个端点（/encrypt 和 /decrypt）到 Spring Cloud Config 服务：
#  - http://localhost:8888/encrypt
#      Example:
#        URL: http://localhost:8888/encrypt
#        METHOD: POST
#        BODY: root
#        RESPONSE: 1a6d087099a484013f94121ba60d15688a2307dcbff5769ee7e6ec33eae74393
#  - http://localhost:8888/decrypt
#      Example:
#        URL: http://localhost:8888/decrypt
#        METHOD: POST
#        BODY: 1a6d087099a484013f94121ba60d15688a2307dcbff5769ee7e6ec33eae74393
#        RESPONSE: root
encrypt: # or set environment variable: export ENCRYPT_KEY=IMSYMMETRIC
  key: IMSYMMETRIC
